@page "/interop"
@inject IJSRuntime JsRuntime

@rendermode InteractiveServer

<script type="text/javascript" src="https://d3js.org/d3.v3.min.js"></script>
<script type="text/javascript" src="https://cdn.rawgit.com/jasondavies/d3-cloud/master/build/d3.layout.cloud.js"></script>

<div class="h-50 w-50 d-flex align-items-center justify-content-center">
    <div id="world-cloud"></div>
</div>

<h1>JS Interop</h1>

<h3>Create alert</h3>

<button class="btn btn-success" @onclick="ShowAlert">Show alert</button>
<br />

<h3>Ask me a question</h3>

<input @bind="questionText" />

<button class="btn btn-warning" @onclick="AskQuestion">Ask Question</button>

<div>
    The Answer was: <span id="answerSpan"></span>
</div>

<h3>Please focus</h3>

<input @ref="InputToFocus" />

<button class="btn btn-danger" @onclick="Focus">Focus!</button>

@code {
    string questionText = string.Empty;
    ElementReference InputToFocus;

    async Task Focus()
    {
        await JsRuntime.InvokeVoidAsync("focusOnElement", InputToFocus);
    }

    async Task AskQuestion()
    {
        var response = await JsRuntime.InvokeAsync<string>("createPrompt", questionText);
        await JsRuntime.InvokeVoidAsync("setElementTextById", "answerSpan", response);
    }

    async Task ShowAlert()
    {
        await JsRuntime.InvokeVoidAsync("createAlert");
    }

    private string[] wor = ["me", "you", "they", "him", "her"];

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JsRuntime.InvokeVoidAsync("runMe");
        }
    }

}
