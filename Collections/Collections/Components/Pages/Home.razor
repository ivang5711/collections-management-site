@page "/"
@using Components.TestData

<PageTitle>Collections home page</PageTitle>
<div class="container-xxl py-3">
    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            Tag cloud
        </h1>
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between my-3">
        @* <TagCloud /> *@
        <script src="https://cdn.jsdelivr.net/npm/TagCloud@2.2.0/dist/TagCloud.min.js"></script>
        <span class="content"></span>
    </div>
    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            Recently added items
        </h1>
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between my-3">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-5 row-cols-xl-5 g-3
            justify-content-center">
            @if (collections is not null)
            {
                @foreach (Item item in items!)
                {
                    <div class="col">
                        <RecentlyAddedItems Item="item" />
                    </div>
                }
            }
            else
            {
                for (int i = 0; i < 5; i++)
                {
                    <div class="col">
                        <RecentlyAddedItems />
                    </div>
                }
            }

        </div>
    </div>
    <div>
        <h1 class="display-6">
            <span class="text-danger">
                <i class="bi bi-fire"></i>
            </span>
            Top 5 Collections
        </h1>
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between my-3">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-5 row-cols-xl-5 g-3
            justify-content-center">
            @if (collections is not null)
            {
                @foreach (Collection collection in collections)
                {
                    <div class="col">
                        <TopCollections Collection="collection" />
                    </div>
                }
            }
            else
            {
                for (int i = 0; i < 5; i++)
                {
                    <div class="col">
                        <TopCollections />
                    </div>
                }
            }

        </div>
    </div>
</div>

<script>
    var texts = [
        '3D', 'TagCloud', 'JavaScript',
        'CSS3', 'Animation', 'Interactive',
        'Mouse', 'Rolling', 'Sphere',
        '6KB', 'v2.x',
    ];
    var tc = TagCloud('.content', texts);
    // console.log(tc);
    var color = '#FF5733';
    document.querySelector('.content').style.color = color;

    let rootEl = document.querySelector('.content');
    rootEl.addEventListener('click', function clickEventHandler(e) {
        if (e.target.className === 'tagcloud--item') {
            window.open(`https://www.bing.com/search?q=${e.target.innerText}`, '_blank');
            // your code here
        }
    });

    // switch style
    function toDefault() { document.body.classList.remove('light'); }
    function toLight() { document.body.classList.add('light'); }
    // add / remove tag
    function addTag() {
        if (!tc) return;
        texts.push('New');
        tc.update(texts);
    }
    function removeTag() {
        if (!tc) return;
        texts.pop();
        tc.update(texts);
    }
    var otherTcs = [];
    // create and destroy tagcloud
    function toCreate() {
        if (otherTcs.length >= 3) return;
        otherTcs.push(TagCloud('.content', texts));
    }
    function toDestroy() {
        var last = otherTcs[otherTcs.length - 1];
        if (!last) return;
        last.destroy();
        otherTcs.pop();
    }

</script>

@code {
    private List<Collection>? collections;
    private List<Item>? items;
    public List<Collection> CreateData()
    {
        DataGenerator fakeCollections = new("en");
        int seed = 123;
        return fakeCollections.GenerateCollection(5, seed);
    }

    public List<Item> CreateItems()
    {
        DataGenerator fakeItems = new("en");
        return fakeItems.GenerateItems(5, 558769);
    }

    protected override async Task OnInitializedAsync()
    {
        collections = await Task.Run(() => CreateData());
        items = await Task.Run(() => CreateItems());
    }
}
