@implements IDisposable
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject IJSRuntime JSRuntime
@inject IStringLocalizer<Resource> localizer

@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg navStyle align-items-center" data-bs-theme="light">
    <div class="container-xxl">
        <a href="/" class="me-3 navbar-text nav-link text-nowrap"
           style="text-decoration:none">
            <img src="/stack.svg" height="50" />
            <span class="text-nowrap" style="font-size: 1rem">COLLECTIONS</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarBM" aria-expanded="false"
                aria-label="toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-lg-between" id="navbarBM">
            <div>
                <ul class="navbar-nav align-items-lg-center">
                    <AuthorizeView>
                        <li class="nav-item">
                            <NavLink class="nav-link text-nowrap me-2"
                                     href="/collections" Match="NavLinkMatch.All">
                                <i class="bi bi-box2-heart-fill-nav-menu"></i> @localizer["My Collections"]
                            </NavLink>
                        </li>
                    </AuthorizeView>
                    <li class="nav-item">
                        <NavLink class="nav-link text-nowrap me-2"
                                 href="/all">
                            <i class="bi bi-globe2-nav-menu"></i> @localizer["See All"]
                        </NavLink>
                    </li>
                    <li class="ps-3">
                        <form class="d-flex text-nowrap" role="search" @onsubmit="SubmitSearch">
                            <input class="form-control" style="min-width: 100px" @bind="SearchInput" type="search" placeholder="@localizer["Search"]" aria-label="Search">
                            <button class="btn btn-outline-secondary mx-lg-1" type="submit"><i class="bi bi-search d-flex mx-auto align-items-center h-100 w-100 justify-content-center"></i></button>
                        </form>
                    </li>
                    
                    <li class="ps-3">
                        <CultureSelector />
                    </li>

                </ul>
            </div>
            <span class="navbar-nav">
                <AuthorizeView Roles="Admin">
                    <li class="nav-item">
                        <NavLink class="nav-link text-nowrap" href="admin">
                            <span class="bi bi-gear-nav-menu"
                                  aria-hidden="true"></span>
                        </NavLink>
                    </li>
                </AuthorizeView>
                <AuthorizeView>
                    <Authorized>
                        <span class="navbar-nav">
                            <span class="nav-item">
                                <NavLink class="nav-link text-nowrap me-2" href="Account/Manage">
                                    <span class="bi bi-person-fill-nav-menu"
                                          aria-hidden="true">
                                    </span> @localizer["Hello"], @(context.User.Identity?.Name)!
                                </NavLink>
                            </span>
                        </span>
                        <span class="navbar-nav ">
                            <span class="nav-item">
                                <form action="Account/Logout" method="post">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl"
                                           value="@currentUrl" />
                                    <button type="submit" class="nav-link me-2">
                                        <span class="bi bi-arrow-bar-left-nav-menu"
                                              aria-hidden="true"></span> @localizer["Logout"]
                                    </button>
                                </form>
                            </span>
                        </span>
                    </Authorized>
                    <NotAuthorized>
                        <span class="navbar-nav">
                            <span class="nav-item">
                                <NavLink class="nav-link text-nowrap me-2" href="Account/Register">
                                    <span class="bi bi-person-nav-menu"
                                          aria-hidden="true"></span> @localizer["Register"]
                                </NavLink>
                            </span>
                        </span>
                        <span class="navbar-nav">
                            <span class="nav-item">
                                <NavLink class="nav-link text-nowrap me-2" href="Account/Login">
                                    <span class="bi bi-person-badge-nav-menu"
                                          aria-hidden="true"></span> @localizer["Login"]
                                </NavLink>
                            </span>
                        </span>
                    </NotAuthorized>
                </AuthorizeView>
            </span>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    public string SearchInput { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager
            .ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private async Task SubmitSearch()
    {
        await SetLSData("searchText", SearchInput);
        NavigationManager.NavigateTo($"/search", true);
    }

    async Task SetLSData(string key, string value)
    {
        await JSRuntime.InvokeVoidAsync("setLocalStoreData", key, value);
    }
}