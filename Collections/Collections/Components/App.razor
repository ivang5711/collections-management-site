<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN"
          crossorigin="anonymous">
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="Collections.styles.css" />
    <link rel="icon" type="image/svg" href="/stack.svg" />
    <HeadOutlet />
</head>

<body> 
    <Routes />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous">
    </script>
    <script src="_framework/blazor.web.js"></script>
    <script>
    var texts = [
        '3D', 'TagCloud', 'JavaScript',
        'CSS3', 'Animation', 'Interactive',
        'Mouse', 'Rolling', 'Sphere',
        '6KB', 'v2.x',
    ];
    var tc = TagCloud('.content', texts);
    var color = '#FF5733';
    document.querySelector('.content').style.color = color;

    let rootEl = document.querySelector('.content');
    rootEl.addEventListener('click', function clickEventHandler(e) {
        if (e.target.className === 'tagcloud--item') {
            window.open(`https://www.bing.com/search?q=${e.target.innerText}`, '_blank');
        }
    });

    function toDefault() { document.body.classList.remove('light'); }
    function toLight() { document.body.classList.add('light'); }
    // add / remove tag
    function addTag() {
        if (!tc) return;
        texts.push('New');
        tc.update(texts);
    }
    function removeTag() {
        if (!tc) return;
        texts.pop();
        tc.update(texts);
    }
    var otherTcs = [];
    // create and destroy tagcloud
    function toCreate() {
        if (otherTcs.length >= 3) return;
        otherTcs.push(TagCloud('.content', texts));
    }
    function toDestroy() {
        var last = otherTcs[otherTcs.length - 1];
        if (!last) return;
        last.destroy();
        otherTcs.pop();
    }

</script>
</body>

</html>
